name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  uv-setup:
    name: python
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install wget2
        run: |
          sudo apt-get update
          sudo apt-get install -y wget2

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Enable caching
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run ruff
        uses: astral-sh/ruff-action@v3

      - name: Run tests
        run: uv run pytest

  config-run:
    name: config
    runs-on: ubuntu-latest
    needs: uv-setup

    steps:
      - uses: actions/checkout@v5

      - name: Install wget2
        run: |
          sudo apt-get update
          sudo apt-get install -y wget2

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Enable caching
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Prepare CI config
        run: |
          uv run python - <<'PY'
          import pathlib
          import yaml

          source = pathlib.Path("test_config.yaml")
          target = pathlib.Path("test_config_ci.yaml")

          config = yaml.safe_load(source.read_text())
          config["frequency"] = 0

          for log in config.get("logs", []):
              if isinstance(log, dict):
                  log["frequency"] = 0

          target.write_text(yaml.safe_dump(config, sort_keys=False))
          PY

      - name: Run config smoke test
        run: uv run python heliotorrent.py --config test_config_ci.yaml --verbose
